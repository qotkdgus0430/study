/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.39
 * Generated at: 2025-04-02 07:25:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.profile_005f01;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class profile_005fjihun_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\" />\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Dongle&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/fullPage.js/3.1.2/fullpage.min.css\">\r\n");
      out.write("  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/fullPage.js/3.1.2/fullpage.min.js\"></script>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"styles.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"navi.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <canvas class=\"background\"></canvas>\r\n");
      out.write("  <div id=\"navi-container\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navi.jsp", out, false);
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("  <div id=\"fullpage\">\r\n");
      out.write("    <!-- Section 1: 소개 -->\r\n");
      out.write("    <div class=\"section\" id=\"section1\">\r\n");
      out.write("      <div class=\"card\" data-state=\"#about\">\r\n");
      out.write("        <div class=\"card-header\">\r\n");
      out.write("          <div class=\"card-cover\" style=\"background-image: url('https://images.unsplash.com/photo-1549068106-b024baf5062d?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=934&amp;q=80')\"></div>\r\n");
      out.write("          <img class=\"card-avatar\" src=\"https://images.unsplash.com/photo-1549068106-b024baf5062d?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=934&amp;q=80\" alt=\"avatar\" />\r\n");
      out.write("          <h1 class=\"card-fullname\">김지훈</h1>\r\n");
      out.write("          <h2 class=\"card-jobtitle\">Full-Stack Developer</h2>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"card-main\">\r\n");
      out.write("          <div class=\"card-section is-active\" id=\"about\">\r\n");
      out.write("            <div class=\"card-content\">\r\n");
      out.write("              <div class=\"card-subtitle\">자기소개</div>\r\n");
      out.write("              <p class=\"card-desc\">\r\n");
      out.write("                UI, UX <br>\r\n");
      out.write("                가독성과 리팩토링을 <br>\r\n");
      out.write("                중요시하는 개발자\r\n");
      out.write("              </p>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"card-section\" id=\"experience\">\r\n");
      out.write("            <div class=\"card-content\">\r\n");
      out.write("              <div class=\"card-subtitle\">Tech Stack</div>\r\n");
      out.write("              <div class=\"card-timeline\">\r\n");
      out.write("                <div class=\"card-item\" data-year=\"Front\">\r\n");
      out.write("                  <div class=\"card-item-title\">Front-end</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">HTML</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">CSS</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">JS</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-item\" data-year=\"Back\">\r\n");
      out.write("                  <div class=\"card-item-title\">Back-end</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">Spring Boot</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">Java</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">JWT</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">Security</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">JPA</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">QueryDSL</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-item\" data-year=\"DB\">\r\n");
      out.write("                  <div class=\"card-item-title\">DataBase</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">Oracle</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">MySQL</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">Redis</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-item\" data-year=\"Infra\">\r\n");
      out.write("                  <div class=\"card-item-title\">AWS</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">S3</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">EC2</div>\r\n");
      out.write("                  <div class=\"card-item-desc\">RDS</div>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"card-section\" id=\"contact\">\r\n");
      out.write("            <div class=\"card-content\">\r\n");
      out.write("              <div class=\"card-subtitle\">CONTACT</div>\r\n");
      out.write("              <div class=\"card-contact-wrapper\">\r\n");
      out.write("                <div class=\"card-contact\">\r\n");
      out.write("                  <svg xmlns=\"SVG namespace \" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n");
      out.write("                    <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z\" />\r\n");
      out.write("                    <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n");
      out.write("                  </svg>\r\n");
      out.write("                  서울특별시 종로구 명륜3가 99-9\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-contact\">\r\n");
      out.write("                  <svg xmlns=\"SVG namespace \" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n");
      out.write("                    <path d=\"M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z\" />\r\n");
      out.write("                  </svg>\r\n");
      out.write("                  010-9844-9644\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-contact\">\r\n");
      out.write("                  <svg xmlns=\"SVG namespace \" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n");
      out.write("                    <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\r\n");
      out.write("                    <path d=\"M22 6l-10 7L2 6\" />\r\n");
      out.write("                  </svg>\r\n");
      out.write("                  kjh950901@gmail.com\r\n");
      out.write("                </div>\r\n");
      out.write("                <button class=\"contact-me\">WORK TOGETHER</button>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"card-buttons\">\r\n");
      out.write("            <button data-section=\"#about\" class=\"is-active\">PROFILE</button>\r\n");
      out.write("            <button data-section=\"#experience\">TECH STACK</button>\r\n");
      out.write("            <button data-section=\"#contact\">CONTACT</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <script src=\"script.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
